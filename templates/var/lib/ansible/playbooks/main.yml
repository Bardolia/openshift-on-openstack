{{=<% %>=}}
- include: /var/lib/ansible/playbooks/dns.yml

<%#ansible_first_run%>
<%#deploy_registry%>
<%#prepare_registry%>
- include: /var/lib/ansible/playbooks/registry.yml
<%/prepare_registry%>
<%/deploy_registry%>
<%#volume_quota%>
- include: /var/lib/ansible/playbooks/quota.yml
<%/volume_quota%>
<%/ansible_first_run%>

- include: /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml
  vars:
    openshift_infra_nodes: "{{ groups.infra | default([]) }}"

- hosts: nodes
  sudo: yes
  tasks:
  - name: Allow docker traffic
    shell: iptables -A DOCKER -p tcp -j ACCEPT
    when: openshift_use_flannel

- hosts: masters[0]
  sudo: yes
  tasks:
  - name: Fetch cert file
    fetch:
      src=/etc/origin/master/ca.crt
      dest=<%heat_outputs_path%>.ca_cert
      flat=yes

  - name: Fetch ca key
    fetch:
      src=/etc/origin/master/ca.key
      dest=<%heat_outputs_path%>.ca_key
      flat=yes

- hosts: nodes
  sudo: yes
  tasks:
  - name: Restart node service
    service: name={{openshift.common.service_type}}-node state=restarted

<%#deploy_registry%>
- name: Waiting for registry setup
  hosts: masters[0]
  tasks:
  - action: shell oc get pod | grep -v deploy | grep registry | grep Running
    register: result
    until: result.rc == 0
    retries: 15
    delay: 60
<%/deploy_registry%>

<%#deploy_router%>
- name: Waiting for router setup
  hosts: masters[0]
  tasks:
  - action: shell oc get pod | grep -v deploy | grep router | grep Running
    register: result
    until: result.rc == 0
    retries: 15
    delay: 60

<%#router_vip%>
- include: /var/lib/ansible/playbooks/ipfailover.yml

- name: Waiting for IP failover setup
  hosts: masters[0]
  tasks:
  - action: shell oc get pod | grep -v deploy | grep ipfailover | grep Running
    register: result
    until: result.rc == 0
    retries: 15
    delay: 60
<%/router_vip%>
<%/deploy_router%>

- hosts: masters[0]
  sudo: yes
  tasks:
  - name: Disable scheduling on master nodes
    shell: oadm manage-node {{ item }} --schedulable=false
    with_items: "{{groups['masters']}}"

- hosts: masters[0]
  sudo: yes
  tasks:
  - name: Clean pods in DeadlineExceeded status
    shell: oc get pod | grep DeadlineExceeded | cut -f 1 -d " " | xargs -r oc delete pod

<%#deploy_router%>
<%#dedicated_lb%>
- include: /var/lib/ansible/playbooks/haproxy.yml
<%/dedicated_lb%>
<%/deploy_router%>

<%={{ }}=%>
